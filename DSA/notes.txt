1. Operator overloading is not supported in java. Only one operator "+" is by default overloaded only for Strings to enable concatenation.
2. In python there is no primitive, everything is an obj and thus stored in heap.
3. But, in java there are primitives which are stored in Stack and non-primitives + wrapper classes which are stored in Heap.
4. Primitives take less space and are cheaper to manipulate.
5. STRINGS in java are unique case, they are immutable and are stored in a specific area inside the heap memory k/a String Pool memory.
6. If we create 2 String objs and store same value in them it will not create new string :
    String a = "Adi";
    String b = "Adi";
    Both will points to the same String instance.
    String b = new String("Adi");
    will create a new String instance.
7. String Pool is a bit faster.
8. STRINGBUILDER : datatype to make String work as mutables.
9. Lecture -  RECURSION :
    1. How function call works in languages internally :
        - A function will remain in the stack until it is completed.
        - When a function is finished executing it will be popped from the stack and the flow of prog will go to where the function was called from.
    2. Space complexity in recursion is not constant because of recursive calls.
    